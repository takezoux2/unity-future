using System;

using SharpUnit;
using GeishaTokyo.Concurrent.Factory;
using System.Threading;
using UnityEngine;

namespace GeishaTokyo.Concurrent.Test
{
	public class AsyncTest : TestCase
	{
		
		
		[UnitTest]
		public void TestAsyncSuccess ()
		{
			var f = AsyncFactory.Start<string>(() => {
				Thread.Sleep(TimeSpan.FromSeconds(1));
				return "ok";
			});
			// not finished yet.
			Assert.False(f.Done);
			
			
			
			string v = f.Get();
			
			Assert.Equal("ok",v);
		}
		
		[UnitTest]
		public void TestAsyncError ()
		{
			var e = new Exception("Error");
			var f = AsyncFactory.Start<string>(() => {
				Thread.Sleep(TimeSpan.FromSeconds(1));
				throw e;
			});
			// not finished yet.
			Assert.False(f.Done);
			
			f.Wait();
			
			Assert.Equals(e,f.Error);
		}
		
		[UnitTest]
		public void TestCoComplete()
		{
			var obj = new GameObject();
			obj.name = "Generated by unit test";
			var o = obj.AddComponent<UnitTestObject>();
			
			var f = AsyncFactory.Start<string>( () => {
				return "ok";
			});
			o.Future = f;
			
			
		}
		
	}
}

